{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth-routing.module.ts","webpack:///./src/app/auth/auth.component.html","webpack:///./src/app/auth/auth.component.ts","webpack:///./src/app/auth/auth.module.ts","webpack:///./src/app/auth/login/login.component.html","webpack:///./src/app/auth/login/login.component.scss","webpack:///./src/app/auth/login/login.component.ts","webpack:///./src/app/auth/registration/registration.component.html","webpack:///./src/app/auth/registration/registration.component.scss","webpack:///./src/app/auth/registration/registration.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  {path: '', redirectTo: 'login', pathMatch: 'full'}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<router-outlet></router-outlet>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'anga';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { AuthModule } from './auth/auth.module';\nimport { AppRoutingModule } from './app-routing.module';\n//import { UsersService } from './shared/services/users.service';\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n\tHttpClientModule,\n\tAuthModule,\n\tAppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegistrationComponent } from './registration/registration.component';\r\nimport { AuthComponent } from './auth.component';\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: AuthComponent, children: [\r\n    {path: 'login', component: LoginComponent},\r\n    {path: 'registration', component: RegistrationComponent}\r\n  ]}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule {}\r\n","module.exports = \"<div class=\\\"auth\\\">\\r\\n  <div class=\\\"auth-container\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <header class=\\\"auth-header\\\">\\r\\n        <h1 class=\\\"auth-title\\\">\\r\\n          <div class=\\\"logo\\\">\\r\\n            <span class=\\\"l l1\\\"></span>\\r\\n            <span class=\\\"l l2\\\"></span>\\r\\n            <span class=\\\"l l3\\\"></span>\\r\\n            <span class=\\\"l l4\\\"></span>\\r\\n            <span class=\\\"l l5\\\"></span>\\r\\n          </div>\\r\\n          Домашняя бухгалтерия\\r\\n        </h1>\\r\\n      </header>\\r\\n      <div class=\\\"auth-content\\\">\\r\\n        <router-outlet></router-outlet>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'wfm-auth',\r\n  templateUrl: './auth.component.html'\r\n})\r\nexport class AuthComponent implements OnInit {\r\n\r\n  constructor(private router: Router) {}\r\n\r\n  ngOnInit() {\r\n    this.router.navigate(['/login']);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegistrationComponent } from './registration/registration.component';\r\nimport { AuthComponent } from './auth.component';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent,\r\n    RegistrationComponent,\r\n    AuthComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AuthRoutingModule,\r\n   // SharedModule\r\n  ]\r\n})\r\nexport class AuthModule {}\r\n","module.exports = \"<p class=\\\"text-xs-center\\\">Войдите для работы</p>\\n<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n  <div\\n    class=\\\"form-group\\\"\\n    [ngClass]=\\\"{'has-error': form.get('email').invalid && form.get('email').touched}\\\"\\n  >\\n    <label for=\\\"email\\\">Email</label>\\n    <input\\n      type=\\\"text\\\"\\n      class=\\\"form-control underlined\\\"\\n      id=\\\"email\\\"\\n      placeholder=\\\"Введите ваш email\\\"\\n      formControlName=\\\"email\\\"\\n    >\\n    <span\\n      class=\\\"form-help-text\\\"\\n      *ngIf=\\\"form.get('email').invalid && form.get('email').touched\\\"\\n    >\\n      <span *ngIf=\\\"form.get('email')['errors']['required']\\\">Email не может быть пустым. </span>\\n      <span *ngIf=\\\"form.get('email')['errors']['email']\\\">Введите корректный email. </span>\\n    </span>\\n  </div>\\n  <div\\n    class=\\\"form-group\\\"\\n    [ngClass]=\\\"{'has-error': form.get('password').invalid && form.get('password').touched}\\\"\\n  >\\n    <label for=\\\"password\\\">Пароль</label>\\n    <input\\n      type=\\\"password\\\"\\n      class=\\\"form-control underlined\\\"\\n      id=\\\"password\\\"\\n      placeholder=\\\"Пароль\\\"\\n      formControlName=\\\"password\\\"\\n    >\\n    <span\\n      class=\\\"form-help-text\\\"\\n      *ngIf=\\\"form.get('password').invalid && form.get('password').touched\\\"\\n    >\\n      <span *ngIf=\\\"form.get('password')['errors']['required']\\\">Пароль не может быть пустым. </span>\\n      <span *ngIf=\\\"form.get('password')['errors']['minlength']\\\">\\n        Пароль должен быть больше\\n        {{ form.get('password')['errors']['minlength']['requiredLength'] }}\\n        символов. Сейчас {{ form.get('password')['errors']['minlength']['actualLength'] }}.\\n      </span>\\n    </span>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <button\\n      type=\\\"submit\\\"\\n      class=\\\"btn btn-block btn-primary\\\"\\n      [disabled]=\\\"form.invalid\\\"\\n    >\\n      Войти\\n    </button>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <p class=\\\"text-muted text-xs-center\\\">\\n      Нет аккаунта? <a href=\\\"#\\\">Зарегистрироваться!</a>\\n    </p>\\n  </div>\\n</form>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'wfm-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  form: FormGroup;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      'email': new FormControl(null, [Validators.required, Validators.email]),\n      'password': new FormControl(null, [Validators.required, Validators.minLength(6)])\n    });\n  }\n\n  onSubmit() {\n    console.log(this.form);\n  }\n\n}\n","module.exports = \"<p class=\\\"text-xs-center\\\">Регистрация для получения доступа</p>\\n<form>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"email\\\">Email</label>\\n    <input\\n      type=\\\"text\\\"\\n      class=\\\"form-control underlined\\\"\\n      id=\\\"email\\\"\\n      placeholder=\\\"Введите email\\\"\\n    >\\n  </div>\\n  <div class=\\\"form-group has-error\\\">\\n    <label for=\\\"password\\\">Пароль</label>\\n    <input\\n      type=\\\"password\\\"\\n      class=\\\"form-control underlined\\\"\\n      id=\\\"password\\\"\\n      placeholder=\\\"Введите пароль\\\"\\n    >\\n    <span class=\\\"form-help-text\\\">Error message.</span>\\n  </div>\\n  <div class=\\\"form-group has-success\\\">\\n    <label for=\\\"name\\\">Имя</label>\\n    <input\\n      type=\\\"text\\\"\\n      class=\\\"form-control underlined\\\"\\n      id=\\\"name\\\"\\n      placeholder=\\\"Введите имя\\\"\\n    >\\n    <span class=\\\"form-help-text\\\">Success message.</span>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"agree\\\">\\n      <input class=\\\"checkbox\\\" id=\\\"agree\\\" type=\\\"checkbox\\\">\\n      <span>Согласен с правилами</span>\\n    </label>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <button type=\\\"submit\\\" class=\\\"btn btn-block btn-primary\\\">Зарегистрироваться</button>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <p class=\\\"text-muted text-xs-center\\\">\\n      Уже есть аккаунт?\\n      <a href=\\\"#\\\">\\n        Войти!\\n      </a>\\n    </p>\\n  </div>\\n</form>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvcmVnaXN0cmF0aW9uL3JlZ2lzdHJhdGlvbi5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'wfm-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.scss']\n})\nexport class RegistrationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport 'rxjs/Rx';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}